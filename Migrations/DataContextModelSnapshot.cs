// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sunrise;

#nullable disable

namespace Sunrise.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sunrise.Models.Addition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("ExtrasPrice")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Additions");
                });

            modelBuilder.Entity("Sunrise.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChosenAdditionIndexId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentIndexId")
                        .HasColumnType("int");

                    b.Property<int>("RoomIndexId")
                        .HasColumnType("int");

                    b.Property<int>("Sum")
                        .HasColumnType("int");

                    b.Property<int>("UserIndexId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChosenAdditionIndexId");

                    b.HasIndex("PaymentIndexId");

                    b.HasIndex("RoomIndexId");

                    b.HasIndex("UserIndexId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Sunrise.Models.Opinion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmountOfStars")
                        .HasColumnType("int");

                    b.Property<string>("OpinionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserIndexId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserIndexId");

                    b.ToTable("Opinions");
                });

            modelBuilder.Entity("Sunrise.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Sunrise.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DoubleBeds")
                        .HasColumnType("int");

                    b.Property<int>("MaxAmountOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotosFolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PricePerNight")
                        .HasColumnType("real");

                    b.Property<bool>("Restroom")
                        .HasColumnType("bit");

                    b.Property<int>("SingleBeds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Sunrise.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Sunrise.Models.UserDto", b =>
                {
                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UsersDto");
                });

            modelBuilder.Entity("Sunrise.Models.Booking", b =>
                {
                    b.HasOne("Sunrise.Models.Addition", "ChosenAdditionIndex")
                        .WithMany()
                        .HasForeignKey("ChosenAdditionIndexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.Payment", "PaymentIndex")
                        .WithMany()
                        .HasForeignKey("PaymentIndexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.Room", "RoomIndex")
                        .WithMany()
                        .HasForeignKey("RoomIndexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sunrise.Models.User", "UserIndex")
                        .WithMany()
                        .HasForeignKey("UserIndexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChosenAdditionIndex");

                    b.Navigation("PaymentIndex");

                    b.Navigation("RoomIndex");

                    b.Navigation("UserIndex");
                });

            modelBuilder.Entity("Sunrise.Models.Opinion", b =>
                {
                    b.HasOne("Sunrise.Models.User", "UserIndex")
                        .WithMany()
                        .HasForeignKey("UserIndexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserIndex");
                });
#pragma warning restore 612, 618
        }
    }
}
